@model BCCVehicleRequisitionManagementSystem.ViewModels.RequisitionViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Requisition</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(m=>m.EmployeeId)
        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Employee.Name, new {htmlAttributes = new {@class = "form-control", readOnly="readonly" }})
                @Html.ValidationMessageFor(model => model.EmployeeId, "", new {@class = "text-danger"})
            </div>

            @Html.LabelFor(model=>model.Employee.Department.Name,"Department", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Employee.Department.Name, new {htmlAttributes = new {@class = "form-control", readOnly = "readonly" } })
                @Html.ValidationMessageFor(model => model.EmployeeId, "", new {@class = "text-danger"})
            </div>
            <div class="clearfix"></div>
            <br/>

            @Html.LabelFor(model => model.Employee.EmployeeDesignation.Designation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Employee.EmployeeDesignation.Designation, new {htmlAttributes = new {@class = "form-control", readOnly = "readonly" } })
                @Html.ValidationMessageFor(model => model.EmployeeId, "", new {@class = "text-danger"})
            </div>

            @Html.LabelFor(model => model.Employee.ContactNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Employee.ContactNo, new { htmlAttributes = new { @class = "form-control", readOnly = "readonly" } })
                @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="clearfix"></div>

        <div class="form-group">
            @Html.LabelFor(model => model.JourneyStartDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class='col-md-4 input-group date' id='datetimepicker8'>
                @Html.EditorFor(model => model.JourneyStartDateTime, new { htmlAttributes = new { @class = "form-control" } })
                <span class="input-group-addon">
                    <span class="fa fa-calendar">
                    </span>
                </span>
            </div>
            @Html.ValidationMessageFor(model => model.JourneyStartDateTime, "", new { @class = "text-danger" })
            @*<div class="col-md-4">
                @Html.EditorFor(model => model.JourneyStartDateTime, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.JourneyStartDateTime, "", new {@class = "text-danger"})
            </div>*@

            @Html.LabelFor(model => model.JourneyEndDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.JourneyEndDateTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.JourneyEndDateTime, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="clearfix"></div>

        <div class="form-group">
            @Html.LabelFor(model => model.PlaceFrom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.PlaceFrom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PlaceFrom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PlaceTo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.PlaceTo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PlaceTo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Seat, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Seat, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.Seat, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-4">
                @Html.EditorFor(model => model.Description, new {htmlAttributes = new {@class = "form-control", @style="height:100px;" }})
                @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Send Requiest" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">
        $(function () {
            $('#datetimepicker8').datetimepicker({
                icons: {
                    time: "fa fa-clock-o",
                    date: "fa fa-calendar",
                    up: "fa fa-arrow-up",
                    down: "fa fa-arrow-down"
                }
            });
        });
</script>
}
